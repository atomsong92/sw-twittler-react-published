{"version":3,"sources":["Twittler.js","index.js"],"names":["Twittler","React","Component","constructor","props","super","this","state","tweets","uuid","writer","date","content","newTweetContent","onTextChange","bind","addNewTweet","e","setState","target","value","newTweet","length","Date","toISOString","substring","prevState","render","id","onChange","onClick","map","t","SingleTweet","key","children","className","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"4NAKA,MAAMA,UAAiBC,IAAMC,UAC3BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,OAAQ,CACN,CACEC,KAAM,EACNC,OAAQ,qBACRC,KAAM,aACNC,QAAS,mCAEX,CACEH,KAAM,EACNC,OAAQ,qBACRC,KAAM,aACNC,QAAS,uDAGbC,gBAAiB,IAGnBP,KAAKQ,aAAeR,KAAKQ,aAAaC,KAAKT,MAC3CA,KAAKU,YAAcV,KAAKU,YAAYD,KAAKT,MAG3CQ,aAAaG,GACXX,KAAKY,SAAS,CACZL,gBAAiBI,EAAEE,OAAOC,QAI9BJ,YAAYC,GACV,IAAMI,EAAW,CACfZ,KAAMH,KAAKC,MAAMC,OAAOc,OAAS,EACjCZ,OApCc,qBAqCdC,MAAM,IAAIY,MAAOC,cAAcC,UAAU,EAAG,IAC5Cb,QAASN,KAAKC,MAAMM,iBAEtBP,KAAKY,SAAUQ,IACN,CAAElB,OAAQ,IAAIkB,EAAUlB,OAAQa,MAI3CM,SACE,OACE,6BACE,oDAhDY,sBAiDZ,yBAAKC,GAAG,gBACN,8BACEA,GAAG,oBACHC,SAAUvB,KAAKQ,eAEjB,4BAAQc,GAAG,mBAAmBE,QAASxB,KAAKU,aAA5C,+BAIF,wBAAIY,GAAG,UACJtB,KAAKC,MAAMC,OAAOuB,IAAKC,GACtB,kBAACC,EAAD,CAAaC,IAAKF,EAAEvB,KAAMC,OAAQsB,EAAEtB,OAAQC,KAAMqB,EAAErB,MACjDqB,EAAEpB,aASjB,SAASqB,GAAY,OAAEvB,EAAF,KAAUC,EAAV,SAAgBwB,IACnC,OACE,wBAAIC,UAAU,SACZ,yBAAKA,UAAU,UAAU1B,GACzB,yBAAK0B,UAAU,QAAQzB,GACvB,6BAAMwB,IAKGnC,QC9ETqC,EAAcC,SAASC,eAAe,QAC5CC,IAASb,OACP,kBAAC,IAAMc,WAAP,KACE,kBAAC,EAAD,OAEFJ,K","file":"static/js/main.ecdeddce.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\n\nconst currentUser = \"김코딩\";\n\nclass Twittler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tweets: [\n        {\n          uuid: 1,\n          writer: \"김코딩\",\n          date: \"2020-10-10\",\n          content: \"안녕 리액트\"\n        },\n        {\n          uuid: 2,\n          writer: \"박해커\",\n          date: \"2020-10-12\",\n          content: \"좋아 코드스테이츠!\"\n        }\n      ],\n      newTweetContent: \"\"\n    };\n\n    this.onTextChange = this.onTextChange.bind(this);\n    this.addNewTweet = this.addNewTweet.bind(this);\n  }\n\n  onTextChange(e) {\n    this.setState({\n      newTweetContent: e.target.value\n    });\n  }\n\n  addNewTweet(e) {\n    const newTweet = {\n      uuid: this.state.tweets.length + 1,\n      writer: currentUser,\n      date: new Date().toISOString().substring(0, 10),\n      content: this.state.newTweetContent\n    };\n    this.setState((prevState) => {\n      return { tweets: [...prevState.tweets, newTweet] };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div>작성자: {currentUser}</div>\n        <div id=\"writing-area\">\n          <textarea\n            id=\"new-tweet-content\"\n            onChange={this.onTextChange}\n          ></textarea>\n          <button id=\"submit-new-tweet\" onClick={this.addNewTweet}>\n            새 글 쓰기\n          </button>\n        </div>\n        <ul id=\"tweets\">\n          {this.state.tweets.map((t) => (\n            <SingleTweet key={t.uuid} writer={t.writer} date={t.date}>\n              {t.content}\n            </SingleTweet>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction SingleTweet({ writer, date, children }) {\n  return (\n    <li className=\"tweet\">\n      <div className=\"writer\">{writer}</div>\n      <div className=\"date\">{date}</div>\n      <div>{children}</div>\n    </li>\n  );\n}\n\nexport default Twittler;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Twittler from \"./Twittler\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <Twittler />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}